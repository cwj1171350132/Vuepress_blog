(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{516:function(t,a,i){"use strict";i.r(a);var v=i(6),_=Object(v.a)({},(function(){var t=this,a=t.$createElement,i=t._self._c||a;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("h1",{attrs:{id:"git命令"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git命令"}},[t._v("#")]),t._v(" git命令")]),t._v(" "),i("h2",{attrs:{id:"创建版本库"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#创建版本库"}},[t._v("#")]),t._v(" 创建版本库")]),t._v(" "),i("ul",[i("li",[t._v("git init    初始化本地版本库")]),t._v(" "),i("li",[t._v("git clone <url> 克隆远程版本库")])]),t._v(" "),i("h2",{attrs:{id:"配置信息"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#配置信息"}},[t._v("#")]),t._v(" 配置信息")]),t._v(" "),i("ul",[i("li",[t._v("git config --list  查看配置")]),t._v(" "),i("li",[t._v('git config user.name "name"  配置用户名')]),t._v(" "),i("li",[t._v('git config user.email "..@qq.com" 配置邮箱')]),t._v(" "),i("li",[t._v('git config --global user.name "name"  配置全局用户名')]),t._v(" "),i("li",[t._v('git config --global user.email "...@qq.com" 配置全局邮箱')])]),t._v(" "),i("h2",{attrs:{id:"添加文件进暂存创库"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#添加文件进暂存创库"}},[t._v("#")]),t._v(" 添加文件进暂存创库")]),t._v(" "),i("ul",[i("li",[t._v('git add "feat acticle"')]),t._v(" "),i("li",[t._v("git add .  或者 git add -A  添加所有文件进暂存区")])]),t._v(" "),i("h2",{attrs:{id:"查看文件更新状态"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#查看文件更新状态"}},[t._v("#")]),t._v(" 查看文件更新状态")]),t._v(" "),i("ul",[i("li",[t._v("git status")])]),t._v(" "),i("h2",{attrs:{id:"添加文件进创库-注释是必须的"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#添加文件进创库-注释是必须的"}},[t._v("#")]),t._v(" 添加文件进创库，注释是必须的")]),t._v(" "),i("ul",[i("li",[t._v('git commit -m "注释"')]),t._v(" "),i("li",[t._v('git commit -a -m "这是合并操作，添加所有暂存文件以及修改文件进创库,修改文件不是必须添加进暂存区。但对新建文件未添加进暂存区的文件无效"')])]),t._v(" "),i("h2",{attrs:{id:"如何忽略文件-对文件不进行备份等"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#如何忽略文件-对文件不进行备份等"}},[t._v("#")]),t._v(" 如何忽略文件，对文件不进行备份等")]),t._v(" "),i("ol",[i("li",[t._v("在当前目录下创建文件名为 .gitignore")]),t._v(" "),i("li",[t._v("在文件里面添加要被忽略的文件\n"),i("ul",[i("li",[t._v("/temp.txt    #表示忽略根目录下的temp.txt文件")]),t._v(" "),i("li",[t._v("/js/*.js     #表示js目录下所有js文件")]),t._v(" "),i("li",[t._v("/.gitignore  #忽略本身文件，在这个文件里面#号表示注释")])])])]),t._v(" "),i("h2",{attrs:{id:"git-日志"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-日志"}},[t._v("#")]),t._v(" git 日志")]),t._v(" "),i("ul",[i("li",[t._v("git log   查看日志")]),t._v(" "),i("li",[t._v("git log --online 以单行查看日志")]),t._v(" "),i("li",[t._v("git reflog       查看所有日志，包括回退操作记录等")]),t._v(" "),i("li",[t._v("git log -p [filename] 查看指定文件的提交历史")]),t._v(" "),i("li",[t._v("git blame  [filename] 以列表方式查看指定文件的提交历史")])]),t._v(" "),i("h2",{attrs:{id:"回退操作"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#回退操作"}},[t._v("#")]),t._v(" 回退操作")]),t._v(" "),i("ul",[i("li",[t._v("git reset --hard Head~0 回退到最后一次的提交")]),t._v(" "),i("li",[t._v("git reset --hard [版本号]  回退到指定版本号")]),t._v(" "),i("li",[t._v("git checkout head [filename] 回退指定的修改未提交文件(在暂存区的也可以)")])]),t._v(" "),i("h2",{attrs:{id:"删除文件"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#删除文件"}},[t._v("#")]),t._v(" 删除文件")]),t._v(" "),i("ul",[i("li",[t._v("git rm [filename] 删除文件")]),t._v(" "),i("li",[t._v("git rm -cached [filename] 删除仓库文件，但不删除本地文件，对于提交了的文件而又改变主意要忽略它，那么用此删除，就可以被忽略掉了")])]),t._v(" "),i("h2",{attrs:{id:"对比文件差异"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#对比文件差异"}},[t._v("#")]),t._v(" 对比文件差异")]),t._v(" "),i("ul",[i("li",[t._v("git diff [版本号1] [版本号2] [比较的文件路径]")]),t._v(" "),i("li",[t._v("git diff   比较工作区与暂存区的差异")])]),t._v(" "),i("h2",{attrs:{id:"创建分支"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#创建分支"}},[t._v("#")]),t._v(" 创建分支")]),t._v(" "),i("ul",[i("li",[t._v("git branch   [分支名]")])]),t._v(" "),i("h2",{attrs:{id:"切换分支"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#切换分支"}},[t._v("#")]),t._v(" 切换分支")]),t._v(" "),i("ul",[i("li",[t._v("git checkout [分支名]")])]),t._v(" "),i("h2",{attrs:{id:"创建并切换分支"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#创建并切换分支"}},[t._v("#")]),t._v(" 创建并切换分支")]),t._v(" "),i("ul",[i("li",[t._v("git checkout -b [分支名]")])]),t._v(" "),i("h2",{attrs:{id:"合并分支"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#合并分支"}},[t._v("#")]),t._v(" 合并分支")]),t._v(" "),i("ul",[i("li",[t._v("git merge [分支名]  把分支合并到当前分支")]),t._v(" "),i("li",[t._v("git rebase [分支名] 和merge不同的是，merge总是按时间轴来排序的，但rebase是基于主分支，然后将本分支版本克隆至主分支最新处")])]),t._v(" "),i("h2",{attrs:{id:"删除分支"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#删除分支"}},[t._v("#")]),t._v(" 删除分支")]),t._v(" "),i("ul",[i("li",[t._v("git branch -d [分支名]")])]),t._v(" "),i("h2",{attrs:{id:"创建变量"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#创建变量"}},[t._v("#")]),t._v(" 创建变量")]),t._v(" "),i("ul",[i("li",[t._v("git remote add origin [变量值]    origin为变量名字")])]),t._v(" "),i("h2",{attrs:{id:"github构建网站"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#github构建网站"}},[t._v("#")]),t._v(" gitHub构建网站")]),t._v(" "),i("ol",[i("li",[t._v("本地仓库创建分支：gh-pages")]),t._v(" "),i("li",[t._v("同步分支")]),t._v(" "),i("li",[t._v("上传命令：git push -f git@github.com:USERNAME/USERNAME.github.io.git gh-pages")]),t._v(" "),i("li",[t._v("https://USERNAME.github.io/REPO 访问")]),t._v(" "),i("li",[t._v("访问格式说明：用户名.github.io/仓库名/文件名")])]),t._v(" "),i("h2",{attrs:{id:"push注意事项"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#push注意事项"}},[t._v("#")]),t._v(" push注意事项")]),t._v(" "),i("ul",[i("li",[t._v("把代码push到服务器时需要先pull一下")]),t._v(" "),i("li",[t._v("把冲突处理完后再push上去")])]),t._v(" "),i("h2",{attrs:{id:"pull代码到本地"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#pull代码到本地"}},[t._v("#")]),t._v(" pull代码到本地")]),t._v(" "),i("ul",[i("li",[t._v("如果本地没有.git目录，需要先初始化一下")]),t._v(" "),i("li",[t._v("命令：git pull [服务器地址] [远程的分支] (最后一个参数如果分支是master可省略)")])]),t._v(" "),i("h2",{attrs:{id:"使用ssh上传代码"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#使用ssh上传代码"}},[t._v("#")]),t._v(" 使用ssh上传代码")]),t._v(" "),i("ul",[i("li",[t._v("公钥和私钥都是用户生成的")])]),t._v(" "),i("ol",[i("li",[t._v("命令：ssh-keygen -t rsa  生成的文件会在当前用户目录的.ssh目录下，此时会要求输入密码，可为空，rsa为秘钥类型")]),t._v(" "),i("li",[t._v("将公钥的内容复制到gitHub的设置ssh里面，生成公钥")]),t._v(" "),i("li",[t._v("在git里面上传项目，如果有密码会要求输入\nLogin with GitHub")])])])}),[],!1,null,null,null);a.default=_.exports}}]);